@import 'tailwindcss';

@theme {

  --color-dark: oklch(13.85% 0.0277 240.35);
  --color-yellow: oklch(75.09% 0.0856 83.92);
  --color-yellow-light: oklch(92.75% 0.0287 84.59);
  
  --spacing-banner: 700px;
  --spacing-banner-lg: 650px;
  --spacing-table: 960px;
  --spacing-table-xl: 700px;
  --spacing-experience-section: 1200px;
  --spacing-bar: 16px;
  --spacing-project-section: 1200px;

  --aspect-banner: 263/700;

  --background-image-banner: url('$lib/assets/banner.png');
  --background-image-border-avatar: url('$lib/assets/border.png');


  --animate-down: down 1.25s ease-out;
  @keyframes down {
    0% {
      top : calc(100% * -1);
    }
    80%{
      top: 20px;
    }
    100% {
      top: 0;
    }
  };

  --animate-cursor: cursor 1s steps(2, jump-none) infinite;
  @keyframes cursor {
    from {
      border-color: var(--color-yellow);
    }
    to {
      border-color: var(--color-dark);
    }
  };
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  body {
    background-color: var(--color-dark);
    width: 100%;
    min-height: 100dvh;
  }
}

@utility absolute-avatar-center {
  top: calc(44% / 2);
  left: calc(44% / 2);
}

@utility timeline{
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: calc((100% - var(--spacing-bar)) / 2);
  width: var(--spacing-bar);
  height: calc(100% + var(--spacing-bar));
  background-color: var(--color-yellow);
  border-radius: 9999px;
}

@utility left-event {
  right: calc((100% + var(--spacing-bar)) / 2 + 1 * var(--spacing-bar));
  &::before{
    right: calc(-1 * var(--spacing-bar));
  }
  &::after{
    right: calc(-2 * var(--spacing-bar) - 1px);
  }
}

@utility right-event {
  left: calc((100% + var(--spacing-bar)) / 2 + 1 * var(--spacing-bar));
  &::before{
    left: calc(-1 * var(--spacing-bar));
  }
  &::after{
    left: calc(-2 * var(--spacing-bar) - 1px);
  }
}

@utility line {
  content: "";
  display: block;
  position: absolute;
  width: var(--spacing-bar);
  border-top: 1px solid var(--color-yellow);
}

@utility point {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  width: var(--spacing-bar);
  aspect-ratio: 1/1;
  background-color: var(--color-yellow-light);
  border-radius: 9999px;
  z-index: 10;
}